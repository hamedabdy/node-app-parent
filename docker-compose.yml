# version: '3.8'

services:
  # Core API Server
  core-server:
    build:
      context: ./core-server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./core-server/src:/app/src
    env_file:
      - ./core-server/.env
    environment:
      - DB_HOST=db       # Set DB_HOST directly in docker-compose
    depends_on:
      # - db
      db:
          condition: service_healthy
          restart: true
      # - redis
    restart: unless-stopped

  # AI & Scripting Service
  selfimprove-app:
    build:
      context: ./selfimprove-app
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    volumes:
      - ./selfimprove-app/src:/app/src
    env_file:
      - ./selfimprove-app/.env
      # - redis
    restart: unless-stopped

  # React Frontend
  core-ui-react:
    build:
      context: ./core-ui-react
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./core-ui-react:/app
      - /app/node_modules  # Ensure node_modules is in the container and not overwritten
    env_file:
      - ./core-ui-react/.env
    stdin_open: true
    tty: true
    depends_on:
      core-server: 
        condition: service_healthy
        restart: true
    restart: unless-stopped

  # Database
  db:
    image: mariadb:lts-ubi9  # Ubuntu-based (stable), or use alpine if available
    # command: --sql_mode=""
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - type: bind
        source: ./core-db/my.cnf
        target: /etc/mysql/my.cnf
      # - ./core-db/my.cnf:/etc/mysql/my.cnf   # Mount custom my.cnf
      - type: bind
        source: ./core-db
        target: /docker-entrypoint-initdb.d
      - type: bind
        source: ./core-db/init.sql.template
        target: /docker-entrypoint-initdb.d/init.sql.template  # Mount the SQL template
      # - ./core-db/init.sql.template:/docker-entrypoint-initdb.d/init.sql.template  # Mount the SQL template
      - type: bind
        source: ./core-db/init.sql-subst.sh
        target: /docker-entrypoint-initdb.d/init.sql-subst.sh  # Mount the
      # - ./core-db/init.sql-subst.sh:/docker-entrypoint-initdb.d/init.sql-subst.sh  # Mount the shell script
    # entrypoint: ["sh", "-c", "ls -al / && ls -al /docker-entrypoint-initdb.d/ && /docker-entrypoint-initdb.d/init.sql-subst.sh && docker-entrypoint.sh mysqld"]  # Run the shell script before the main entrypoint
    env_file:
      - ./core-db/.env
    healthcheck:
      test: mysql -h localhost -u root -p$$MYSQL_ROOT_PASSWORD -e 'SELECT 1;'
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    restart: unless-stopped

  # Cache & Session Store
  # redis:
  #   image: redis:alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

volumes:
  db_data:
  # redis_data: