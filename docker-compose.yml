# version: '3.8'

services:
  # Core API Server
  core-server:
    build:
      context: ./core-server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./core-server/.env
    environment:
      - NODE_ENV=production
      - DB_HOST=db       # Set DB_HOST directly in docker-compose
    depends_on:
      # - db
      db:
        condition: service_healthy
        restart: true
      # - redis
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet \"http://$$HOST:$$PORT/ping\" || exit 1"] #curl --fail -s -o /dev/null http://$HOST:$PORT/api/table/test_connection || exit 1
      interval: 25s
      retries: 3
      start_period: 30s
      timeout: 10s
    restart: unless-stopped

  # AI & Scripting Service
  selfimprove-app:
    build:
      context: ./selfimprove-app
      dockerfile: Dockerfile
    ports:
      - "3002:3000" # Map to 3000 inside the container
    env_file:
      - ./selfimprove-app/.env
      # - redis
    restart: unless-stopped

  # React Frontend
  core-ui-react:
    build:
      context: ./core-ui-react
      dockerfile: Dockerfile
    ports:
      - "3001:3000" # Map to 3000 inside the container
    env_file:
      - ./core-ui-react/.env
    stdin_open: true
    tty: true
    depends_on:
      core-server: 
        condition: service_healthy
        restart: true
    healthcheck:
      test: curl --fail -s -o /dev/null http://localhost:3000 || exit 1
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 10s
    restart: unless-stopped

  # Database
  db:
    image: mariadb:lts-ubi9
    # command: --sql_mode=""
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./core-db/my.cnf:/etc/mysql/my.cnf   # Mount custom my.cnf
      - ./core-db/db-backups/backup20250609.sql:/docker-entrypoint-initdb.d/30-backup20250609.sql
      - ./core-db/init.sql.template:/docker-entrypoint-initdb.d/init.sql.template  # Mount the SQL template
      - ./core-db/init.sql-subst.sh:/docker-entrypoint-initdb.d/init.sql-subst.sh  # Mount the shell script
    env_file:
      - ./core-db/.env
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin --socket=/var/run/mariadb/mariadb.sock -uroot -p\"$$MYSQL_ROOT_PASSWORD\" ping --silent"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 10s
    restart: unless-stopped

  # Cache & Session Store
  # redis:
  #   image: redis:alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

volumes:
  db_data:
  # redis_data: